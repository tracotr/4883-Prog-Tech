class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<double> distances;

        for(int i = 0; i < points.size(); i++){
            int x = (points[i][0] - 0);
            int y = (points[i][1] - 0);

            distances.push_back(sqrt((x*x) + (y*y)));
        }

        vector<int> I(distances.size());
        iota(begin(I), end(I), 0);
        sort(begin(I), end(I), [&](int a, int b) { return distances[a] < distances[b]; });
        

        vector<vector<int>> shortestPoints;
        for(int i = 0; i < k; i++){
            shortestPoints.push_back(points[I[i]]);
        }
        
        return shortestPoints;
    }
};